#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
lat1 = lat1_nc
lat2 = lat2_nc
lon1 = lon1_nc
lon2 = lon2_nc
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.1)
map
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15)
map
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15) +
#add scalebar
ggsn::scalebar(data = NULL, dist = dist, transform = TRUE, model = "WGS84", dist_unit = "km",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
anchor = c(x = lon1 + offset_lon , y = lat2 + offset_lat),
st.color = "white", box.fill = c("white", "white"), st.size = 1)
map
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15) +
#add scalebar
ggsn::scalebar(data = NULL, dist = dist, transform = TRUE, model = "WGS84", dist_unit = "km",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
anchor = c(x = lon1 + offset_lon , y = lat2 + offset_lat),
st.color = "white", box.fill = c("white", "white"), st.size = 0.2)
map
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15) +
#add scalebar
ggsn::scalebar(domestic_violence, dist = 4, dist_unit = "km",
transform = TRUE, model = "WGS84")
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15) +
#add scalebar
ggsn::scalebar(data = NULL, dist = 4, dist_unit = "km",
transform = TRUE, model = "WGS84")
map
#Open OSM
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15) +
#add scalebar
ggsn::scalebar(data = NULL, dist = 4, dist_unit = "km",
transform = TRUE, model = "WGS84",  anchor = c(x = lon1 + offset_lon , y = lat2 + offset_lat))
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15) +
#add scalebar
ggsn::scalebar(data = NULL, dist = 4, dist_unit = "km",
transform = TRUE, model = "WGS84", x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2)
map
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15) +
#add scalebar
ggsn::scalebar(data = NULL, dist = 4, dist_unit = "km",
transform = TRUE, model = "WGS84", x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
anchor = c(x = lon1 + offset_lon , y = lat2 + offset_lat))
map
map = OpenStreetMap::openmap(c(-10,140), c(-30,170), zoom = NULL,
type = c("bing"), #for satellite view
mergeTiles = TRUE)
maplatlon_nc = OpenStreetMap::openproj(map, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map = OpenStreetMap::autoplot.OpenStreetMap(maplatlon_nc) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
axis.text = ggplot2::element_blank()) +
#add north arrow
ggsn::north(data = NULL, location = "bottomleft",
x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
symbol = 1, scale = 0.15) +
#add scalebar
ggsn::scalebar(data = NULL, dist = 4, dist_unit = "km",
transform = TRUE, model = "WGS84", location = "bottomright", x.min = lon1, x.max = lon2, y.min = lat1, y.max = lat2,
anchor = c(x = lon1 + offset_lon , y = lat2 + offset_lat))
map
#load all functions
devtools::load_all()
##### Map nc + australia
reserveffect::map_nc(lat1_nc, lon1_nc, lat2_nc, lon2_nc)
FranceFormes <- raster::getData(name="GADM", country="FRA", level=0)
plot(FranceFormes, main="Carte de la France")
nc <- getData(name="GADM", country="Nouvelle-Calédonie", level=0)
nc <- raster::getData(name="GADM", country="Nouvelle-Calédonie", level=0)
"ccodes()"
ccodes()
ccodes(Nouvelle-calédonie)
raster::ccodes(Nouvelle-calédonie)
raster::ccodes()
nc <- raster::getData(name="GADM", country="PYF", level=0)
plot(FranceFormes, main="Carte de la France")
FranceFormes <- raster::getData(name="GADM", country="PYF", level=0)
plot(FranceFormes, main="Carte de la France")
FranceFormes <- raster::getData(name="GADM", country="AUS", level=0)
plot(FranceFormes, main="Carte de la France")
FranceFormes <- raster::getData(name="GADM", country="New-caledonia", level=0)
plot(FranceFormes, main="Carte de la France")
FranceFormes <- raster::getData(name="GADM", country="france", level=0)
plot(FranceFormes, main="Carte de la France")
FranceFormes <- raster::getData(name="GADM", country="france", level=0, col = "grey")
library(maps)
maps::map('worldHires', col=rainbow(18), fill=T, xlim=c(-19,60), ylim=c(-40,40))
library(mapdata)
install.packages("mapdata")
library(mapdata)
mapdata::map('worldHires', col=rainbow(18), fill=T, xlim=c(-19,60), ylim=c(-40,40))
purrr::map('worldHires', col=rainbow(18), fill=T, xlim=c(-19,60), ylim=c(-40,40))
purrr::map('worldHires')
purrr::map('worldHires', f = NULL)
#declare package dependancies
usethis::use_package("viridis")
usethis::use_package("OpenStreetMap")
usethis::use_package("dplyr")
usethis::use_package("readr")
usethis::use_package("magrittr")
usethis::use_package("ggplot2")
usethis::use_package("ggforce")
usethis::use_package("forcats")
usethis::use_package("stringr")
usethis::use_package("sf")
usethis::use_package("readxl")
usethis::use_package("here")
usethis::use_package("sp")
usethis::use_package("sf")
usethis::use_package("raster")
usethis::use_package("lubridate")
usethis::use_package("rgeos")
usethis::use_package("rgdal")
usethis::use_package("scales")
usethis::use_package("maptools")
usethis::use_package("ggsn")
usethis::use_package("gridExtra")
usethis::use_package("RColorBrewer")
usethis::use_package("ggpubr")
usethis::use_package("car")
usethis::use_package("ggsignif")
usethis::use_package("rcompanion")
usethis::use_package("png")
usethis::use_package("grid")
usethis::use_package("vegan")
usethis::use_package("cowplot")
usethis::use_package("cartography")
#utiliser les pipes dans les fonctions
#usethis::use_pipe() #does not work
library(magrittr)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
#load all functions
devtools::load_all()
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
######################################## DEFINE STUDY AREA ########################################
#Define study area coordnates
#small region
lat1_sm =  -21.52 ; lat2_sm = -21.65
lon1_sm = 165.225 ; lon2_sm = 165.45
# lat1_sm =  -21.51 ; lat2_sm = -21.66
# lon1_sm = 165.21 ; lon2_sm = 165.45
#big region
lat1_bg =  -21.2 ; lat2_bg = -22
lon1_bg = 164.6 ; lon2_bg = 166
#nc + australia
lat1_nc = -30 ; lat2_nc = -10
lon1_nc = 140 ; lon2_nc = 170
######################################## CALCULATE FLIGHT PARAMETERS ########################################
#image footprint
mean_altitude = 47 # in meters (in ft: 155) from ulm altimeter (gopro altitude unreliable)
fov = 86.7 # field of view in degrees from gopro hero 7 black manual
footprint_width = 2 * tanpi(fov / (2*180)) * mean_altitude # in meters, trigonometry formula
image_height = 1520 #in pixels (2.7k gopro format)
image_width = 2704 #in pixels (2.7k gopro format)
footprint_height = footprint_width * image_height/image_width #in meters
#overlap between successive images (given hyp of linear flight)
mean_speed = 30.55 # in m/s (in km/h: 110) from ulm
frame_per_s = 3 # extraction rate in megafauna-project
overlap = (mean_speed / frame_per_s) / footprint_height
######################################## READ and CLEAN TELEMETRY DATA ########################################
#read telemetry data
telemetry_all = reserveffect::read_telem()
#clean telemetry data
telemetry = reserveffect::clean_telem(telemetry_all, lat1_bg, lon1_bg, lat2_bg, lon2_bg)
#Read video information
videos = reserveffect::read_video_info()
#Clean video information
videos = reserveffect::clean_video_info(videos)
#Join video information to telemetry
telemetry = reserveffect::join_video_info_telem(videos, telemetry)
#Clean duplicated obs from telemetry (takes about 20 minutes to process)
telemetry_obs = reserveffect::clean_duplicated_obs_telemetry(telemetry, overlap, image_height)
#Get list of Poe videos
ls_poe_videos = reserveffect::list_poe_videos(videos)
#select video information for Poe
videos_poe = reserveffect::select_poe_videos(videos, ls_poe_videos)
#Join video information to telemetry
telemetry_poe = reserveffect::join_video_poe_info_telem(videos_poe, telemetry)
#select obs for Poe
telemetry_obs_poe = reserveffect::select_obs_telemetry_poe(telemetry_obs, ls_poe_videos)
#count total number of individuals observed per species
telemetry_obs_poe %>%
dplyr::group_by(object) %>%
dplyr::summarise(n_tot = dplyr::n())
# # #read images png
img_Dugong_certain = reserveffect::read_megafauna_image("Dugong_certain")
img_Turtle = reserveffect::read_megafauna_image("Turtle")
img_Shark = reserveffect::read_megafauna_image("Shark")
img_Round_ray = reserveffect::read_megafauna_image("Round_ray")
img_Eagle_ray = reserveffect::read_megafauna_image("Eagle_ray")
######################################## READ CORAL DATA ########################################
# read coral geomorpology polygons
#adapt news polygons
coral_poly = reserveffect::read_coralnc()
#read Allen coral geomorpology polygons benthic
allen_coral_poly = reserveffect::read_crop_and_convert_allen_coralnc_benthic(lon1_sm, lon2_sm, lat2_sm, lat1_sm)
#read Allen coral geomorpology polygons geomorphic
allen_coral_poly_geomorphic = reserveffect::read_crop_and_convert_allen_coralnc_geomorphic(lon1_sm, lon2_sm, lat2_sm, lat1_sm)
# make study area raster (resolution 0.001 degrees)
rast_sm = reserveffect::make_area_raster(lat1_sm, lon1_sm, lat2_sm, lon2_sm, 0.0025)
# make coral cover raster
coral_cover_sm = reserveffect::make_coral_cover_raster(coral_poly, rast_sm)
######################################## READ MPA DATA ########################################
# read mpa polygon
mpa = reserveffect::read_mpanc()
# extract mpa polygon for poe
mpa_poe = reserveffect::extract_mpa_poe(mpa)
######################################## READ TRANSECT DATA ########################################
points1 = reserveffect::read_transects_points("megafauna1_points_latlon")
library(sp)
pts = points1
sector = "1"
#reproject to wgs84
crs_wgs84 <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
pts2 <- sp::spTransform(pts, crs_wgs84)
#order based on id
pts2@data$id = as.numeric(pts2@data$id)
new = pts2@data[order(pts2@data$id),]
coordinates(new) <- ~ xcoord + ycoord
#add id_line
if (sector == "1") {
new$id_line = paste0("1_", c(rep(1:24, each=2)))
}
if (sector == "2") {
new$id_line = paste0("2_", c(rep(1:33, each=2), 35, 36, 35, 36, 37, 38, 37, 38, 39, 40, 39, 40, 41, 42, 41, 42,
43, 44, 43, 44, 45, 46, 45, 46, 47, 48, 47, 48, 49, 50, 49, 50,
51, 52, 51, 52, 53, 54, 53, 54, 55, 56, 55, 56,
57, 58, 57, 58, 59, 60, 59, 60, 61))
}
if (sector == "3") {
new$id_line = paste0("3_", rep(1:168, each=2))
}
#list of Lines per id, each with one Line in a list ********does not work inside function********
x <- lapply(split(new, new$id_line), function(x) Lines(list(Line(coordinates(x))), x$id_line[1L]))
#make spatial lines
lns <- SpatialLines(x)
#make dataframe for the lines groupes by id
data <- data.frame(id = unique(new$id_line))
rownames(data) <- data$id
#make spatial lines data frame
l <- SpatialLinesDataFrame(lns, data)
lines1 = l
####### OSM maps
maplatlon_sm = reserveffect::osm_map(lat1_sm, lon1_sm, lat2_sm, lon2_sm) #bing (satellite view)
#map transects
#with scalebar and mpa
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)
#load all functions
devtools::load_all()
reserveffect::map_transects_scalebar_mpa(maplatlon_sm, lines1, mpa_poe, "small", lat1_sm, lon1_sm, lat2_sm, lon2_sm,
dist = 2, offset_lon = 0.07, offset_lat = 0.01)

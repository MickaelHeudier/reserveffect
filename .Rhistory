ggplot2::xlab("Habitat class") +
ggplot2::ylim(c(0, ylim)) +
ggplot2::ylab("Density") +
ggplot2::ggtitle(species_title) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
axis.text.x = ggplot2::element_text(angle = 90, vjust=0.5, hjust=1, size =12),
axis.title.y = ggplot2::element_text(size = 15),
axis.title.x = ggplot2::element_text(size = 15),
panel.background = ggplot2::element_rect(fill = "white", colour = "black",size = 0.5, linetype = "solid"),
# panel.grid.major.y = ggplot2::element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.grid.minor = ggplot2::element_line(size = 0.25, linetype = 'solid', colour = "white")) +
#add megafaune image
ggplot2::annotation_custom(grid::rasterGrob(img, interpolate=TRUE), xmin = a, xmax = b, ymin = c, ymax = d)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
barplot_density_allen_coral_image(df_all_species_coral, "Round_ray", img_Round_ray)
species="Dugong_certain"
img=img_Dugong_certain
#mean density per mpa status and coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::group_by(coral_hab, mpa_status) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab),
mpa_status = as.factor(new$mpa_status))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
levels(new$mpa_status) <- c("Inside MPA", "Outside MPA")
# parameters for image placement
if (species == "Dugong_certain"){
a = 5.3
b = 7.8
c = 0.04
d = 0.057
ylim = 0.05
species_title <- "Dugong"
}
ylim = 0.02
ggplot2::ggplot(new, ggplot2::aes(x = coral_hab, y = mean_dens, fill = mpa_status)) +
ggplot2::geom_bar(stat = "identity", position = ggplot2::position_dodge()) +
ggplot2::scale_fill_manual(values = c("Outside MPA" = "grey20", "Inside MPA" = "grey80"), name = "MPA status") +
ggplot2::xlab("Habitat class") +
ggplot2::ylab("Density") +
ggplot2::ylim(0, ylim) +
ggplot2::ggtitle(species_title) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
axis.text.x = ggplot2::element_text(angle = 90, vjust=0.5, hjust=1, size =12),
axis.title.x = ggplot2::element_text(size = 15),
axis.title.y = ggplot2::element_text(size = 15),
legend.title = ggplot2::element_text(size = 15),
legend.text = ggplot2::element_text(size = 12),
panel.background = ggplot2::element_rect(fill = "white", colour = "black",size = 0.5, linetype = "solid"),
# panel.grid.major.y = ggplot2::element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.grid.minor = ggplot2::element_line(size = 0.25, linetype = 'solid',colour = "white")) +
#add megafaune image
ggplot2::annotation_custom(grid::rasterGrob(img, interpolate=TRUE), xmin = a, xmax = b, ymin = c, ymax = d)
ylim = 0.005
ggplot2::ggplot(new, ggplot2::aes(x = coral_hab, y = mean_dens, fill = mpa_status)) +
ggplot2::geom_bar(stat = "identity", position = ggplot2::position_dodge()) +
ggplot2::scale_fill_manual(values = c("Outside MPA" = "grey20", "Inside MPA" = "grey80"), name = "MPA status") +
ggplot2::xlab("Habitat class") +
ggplot2::ylab("Density") +
ggplot2::ylim(0, ylim) +
ggplot2::ggtitle(species_title) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),
axis.text.x = ggplot2::element_text(angle = 90, vjust=0.5, hjust=1, size =12),
axis.title.x = ggplot2::element_text(size = 15),
axis.title.y = ggplot2::element_text(size = 15),
legend.title = ggplot2::element_text(size = 15),
legend.text = ggplot2::element_text(size = 12),
panel.background = ggplot2::element_rect(fill = "white", colour = "black",size = 0.5, linetype = "solid"),
# panel.grid.major.y = ggplot2::element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.grid.minor = ggplot2::element_line(size = 0.25, linetype = 'solid',colour = "white")) +
#add megafaune image
ggplot2::annotation_custom(grid::rasterGrob(img, interpolate=TRUE), xmin = a, xmax = b, ymin = c, ymax = d)
new
new$mean_dens
log(new$mean_dens)
#mean density per mpa status and coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::group_by(coral_hab, mpa_status) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab),
mpa_status = as.factor(new$mpa_status))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
levels(new$mpa_status) <- c("Inside MPA", "Outside MPA")
log(new$mean_dens)
## Dugong interaction
comp_dug = make_pairwise_comparison_allen_coral_mpa(df_all_species_coral_mpa, "Dugong_certain")
make_pairwise_comparison_allen_coral_mpa(df_all_species_coral_mpa, "Dugong_certain")
df_all_species_coral_mpa
df=df_all_species_coral_mpa
species="Dugong_certain"
df %>%
dplyr::mutate(allen_coral_hab = as.factor(get(paste("class")))) %>%
# delete na
dplyr::filter(!is.na(density_Dugong_certain), !is.na(density_Turtle), !is.na(density_Shark), !is.na(density_Round_ray), !is.na(density_Eagle_ray)) %>%
as.data.frame() -> df
#density taxa
if (species == "Dugong_certain") {
density_taxa = df$density_Dugong_certain
}
if (species == "Turtle") {
density_taxa = df$density_Turtle
}
if (species == "Shark") {
density_taxa = df$density_Shark
}
if (species == "Round_ray") {
density_taxa = df$density_Round_ray
}
if (species == "Eagle_ray") {
density_taxa = df$density_Eagle_ray
}
density_taxa
df %>%
dplyr::select(id, allen_coral_hab, mpa_status) -> df_env
#need to load library for the function to work (installed from devtools::install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis"))
library(pairwiseAdonis)
#pairwise comp (need to replicate density_taxa column for the function to work)
comp <- pairwise.adonis2(cbind(density_taxa,density_taxa) ~ allen_coral_hab * mpa_status, data = df_env, permutations = 999, method = "euclidean")
comp <- pairwise.adonis2(cbind(df$density_Shark, df$density_Shark) ~ allen_coral_hab * mpa_status, data = df_env, permutations = 999, method = "euclidean")
comp
rm(density_taxa)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
## Dugong interaction
comp_dug = make_pairwise_comparison_allen_coral_mpa(df_all_species_coral_mpa, "Dugong_certain")
comp_dug
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
comp_dug
## Dasyatidae habitat
comp_rou1 = make_pairwise_comparison_allen_coral(df_all_species_coral_mpa, "Round_ray")
## Dasyatidae interaction
comp_rou2 = make_pairwise_comparison_allen_coral_mpa(df_all_species_coral_mpa, "Round_ray")
comp_rou2
comp_dug
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_dens_per_grid_species_poe_with_megafauna_image_log_with_zero(maplatlon_sm_proj, grid_obs_per_date, grid_tracks_per_date, footprint_width, "Eagle_ray", mpa_poe, img_Eagle_ray_grey)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
map_nbr_survey_with_sightings_per_grid_image_coastline(grid_tracks_per_date, grid_obs_per_date, "Eagle_ray", mpa_poe, img_Eagle_ray)
comp_dug
?pairwise.adonis2
comp_rou1
comp_rou2
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
#Mean density in/out mpa
barplot_density_mpa_image(df_all_species_coral_mpa, "Dugong_certain", img_Dugong_certain)
barplot_density_mpa_image(df_all_species_coral_mpa, "Turtle", img_Turtle)
barplot_density_mpa_image(df_all_species_coral_mpa, "Shark", img_Shark)
barplot_density_mpa_image(df_all_species_coral_mpa, "Round_ray", img_Round_ray)
barplot_density_mpa_image(df_all_species_coral_mpa, "Eagle_ray", img_Eagle_ray)
#Mean density per habitat and in/out mpa
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Dugong_certain", img_Dugong_certain)
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Turtle", img_Turtle)
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Shark", img_Shark)
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Round_ray", img_Round_ray)
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Eagle_ray", img_Eagle_ray)
?nested.npmanova
??nested.npmanova
install.packages("BiodiversityR")
?nested.npmanova
??nested.npmanova
77654 / 1000
1553071 / 1000
77654 * 89
6911206 / 1000
6911206 / 1000000
6890677 / 1000000
137813538 / 1000000
78*20
df=df_all_species_coral_mpa
species="Shark"
df %>%
dplyr::mutate(allen_coral_hab = as.factor(get(paste("class")))) %>%
# delete na
dplyr::filter(!is.na(density_Dugong_certain), !is.na(density_Turtle), !is.na(density_Shark), !is.na(density_Round_ray), !is.na(density_Eagle_ray)) %>%
as.data.frame() -> df
df %>%
dplyr::select(id, allen_coral_hab, mpa_status) -> df_env
df_env
#mean density per coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::select(c(density, coral_hab)) %>%
dplyr::group_by(coral_hab) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
df=df_all_species_coral
#mean density per coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::select(c(density, coral_hab)) %>%
dplyr::group_by(coral_hab) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
new
species="Round_ray"
#mean density per coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::select(c(density, coral_hab)) %>%
dplyr::group_by(coral_hab) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
new
order(new)
sort(new)
#update NAMESPACE and add .Rd file for each function in man folder
devtools::document()
#load all functions
devtools::load_all()
#Mean density per habitat
barplot_density_allen_coral_image(df_all_species_coral, "Dugong_certain", img_Dugong_certain)
barplot_density_allen_coral_image(df_all_species_coral, "Turtle", img_Turtle)
barplot_density_allen_coral_image(df_all_species_coral, "Shark", img_Shark)
barplot_density_allen_coral_image(df_all_species_coral, "Round_ray", img_Round_ray)
barplot_density_allen_coral_image(df_all_species_coral, "Eagle_ray", img_Eagle_ray)
#Mean density in/out mpa
barplot_density_mpa_image(df_all_species_coral_mpa, "Dugong_certain", img_Dugong_certain)
barplot_density_mpa_image(df_all_species_coral_mpa, "Turtle", img_Turtle)
barplot_density_mpa_image(df_all_species_coral_mpa, "Shark", img_Shark)
barplot_density_mpa_image(df_all_species_coral_mpa, "Round_ray", img_Round_ray)
barplot_density_mpa_image(df_all_species_coral_mpa, "Eagle_ray", img_Eagle_ray)
#Mean density per habitat and in/out mpa
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Dugong_certain", img_Dugong_certain)
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Turtle", img_Turtle)
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Shark", img_Shark)
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Round_ray", img_Round_ray)
barplot_density_allen_coral_mpa_image(df_all_species_coral_mpa, "Eagle_ray", img_Eagle_ray)
df=
df_all_species_coral_mpa
species
#mean density per mpa status and coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::group_by(coral_hab, mpa_status) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab),
mpa_status = as.factor(new$mpa_status))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
levels(new$mpa_status) <- c("Inside MPA", "Outside MPA")
new
new %>%
dplyr::filter(mean_dens > 0)
df %>%
dplyr::mutate(allen_coral_hab = as.factor(get(paste("class")))) %>%
# delete na
dplyr::filter(!is.na(density_Dugong_certain), !is.na(density_Turtle), !is.na(density_Shark), !is.na(density_Round_ray), !is.na(density_Eagle_ray)) %>%
as.data.frame() -> df
df %>%
dplyr::select(id, allen_coral_hab, mpa_status) -> df_env
df=df_all_species_coral_mpa
df %>%
dplyr::mutate(allen_coral_hab = as.factor(get(paste("class")))) %>%
# delete na
dplyr::filter(!is.na(density_Dugong_certain), !is.na(density_Turtle), !is.na(density_Shark), !is.na(density_Round_ray), !is.na(density_Eagle_ray)) %>%
as.data.frame() -> df
df %>%
dplyr::select(id, allen_coral_hab, mpa_status) -> df_env
df_env
new
0.0039635178/ 0.0001673819
## Dasyatidae interaction
comp_rou2 = make_pairwise_comparison_allen_coral_mpa(df_all_species_coral_mpa, "Round_ray")
comp_rou2
species="Dugong_certain"
#mean density per mpa status and coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::group_by(coral_hab, mpa_status) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab),
mpa_status = as.factor(new$mpa_status))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
levels(new$mpa_status) <- c("Inside MPA", "Outside MPA")
df=df_all_species_coral_mpa
#mean density per mpa status and coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::group_by(coral_hab, mpa_status) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab),
mpa_status = as.factor(new$mpa_status))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
levels(new$mpa_status) <- c("Inside MPA", "Outside MPA")
new
3.967258e-02  / 5.358971e-04
df=df_all_species_coral_mpa
species="Shark"
#mean density and se for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::group_by(mpa_status) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
mpa_status = as.factor(new$mpa_status))
levels(new$mpa_status) <- c("Inside MPA", "Outside MPA")
new
0.0026040159/0.0002992498
species="Eagle_ray"
#mean density and se for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::group_by(mpa_status) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
mpa_status = as.factor(new$mpa_status))
levels(new$mpa_status) <- c("Inside MPA", "Outside MPA")
new
0.0026779863/v
0.0026779863/0.0009599734
species="Round_ray"
df=df_all_species_coral
#mean density per coral hab for given species
df %>%
dplyr::mutate(density = get(paste0("density_", species))) %>%
dplyr::mutate(coral_hab = get(paste("class"))) %>%
dplyr::select(c(density, coral_hab)) %>%
dplyr::group_by(coral_hab) %>%
dplyr::summarize(mean = mean(density, na.rm=T)) -> new
# convert back to spatial object for plotting
new = sf::as_Spatial(new)
# make dataframe for plotting
new = data.frame(mean_dens = new$mean,
coral_hab = as.factor(new$coral_hab))
#rename deep_Sea
levels(new$coral_hab) <- c("Coral/Algae", "Open Sea", "Microalgal Mats", "Rock", "Rubble", "Sand", "Seagrass")
new
0.0003465336/0.0001115879
0.0043915564/0.0003465336
0.0043915564/0.0001115879
0.0091032805/0.0003465336
0.0091032805/0.0001115879
library(tidyverse)
library(ggplot2)
library(cowplot)
library(gridExtra)
library(caret)
library(matrixStats)
library(grid)
##### DATA LOADING --------------------
load(here::here("data" ,"importance_permutation_marine.RData"))
ImpAMP_All <- data.frame(importance_permutation_marine)
VariablesAMP_All = ImpAMP_All$permutation.rowname
ImpAMP_All <- ImpAMP_All[,2:11]
row.names(ImpAMP_All) <- VariablesAMP_All
ImpAMP_All <- (ImpAMP_All/max(ImpAMP_All)) %>%
mutate(score.mean = rowMeans(.), score.sd = rowSds(as.matrix(.)))
load(here::here("data" ,"importance_permutation_marine_strict.RData"))
ImpAMP_I <- data.frame(importance_permutation_marine_strict)
VariablesAMP_I = ImpAMP_I$permutation.rowname
ImpAMP_I <- ImpAMP_I[,2:11]
row.names(ImpAMP_I) <- VariablesAMP_I
ImpAMP_I <- (ImpAMP_I/max(ImpAMP_I)) %>%
mutate(score.mean = rowMeans(.), score.sd = rowSds(as.matrix(.)))
load(here::here("data" ,"importance_permutation_terrestrial.RData"))
ImpATP_All <- data.frame(importance_permutation_terrestrial)
VariablesATP_All = ImpATP_All$permutation.rowname
ImpATP_All <- ImpATP_All[,2:11]
row.names(ImpATP_All) <- VariablesATP_All
ImpATP_All <- (ImpATP_All/max(ImpATP_All)) %>%
mutate(score.mean = rowMeans(.), score.sd = rowSds(as.matrix(.)))
load(here::here("data" ,"importance_permutation_terrestrial_strict.RData"))
ImpATP_I <- data.frame(importance_permutation_terrestrial_strict)
VariablesATP_I = ImpATP_I$permutation.rowname
ImpATP_I <- ImpATP_I[,2:11]
row.names(ImpATP_I) <- VariablesATP_I
ImpATP_I <- (ImpATP_I/max(ImpATP_I)) %>%
mutate(score.mean = rowMeans(.), score.sd = rowSds(as.matrix(.)))
#### DATA PREPARATION --------------------
##### Marine
data.A <- ImpAMP_All %>%
select(c(score.mean, score.sd)) %>%
data.frame(VariablesAMP_All)
colnames(data.A) = c("AMPI_VI.mean", "AMPI_VI.sd", "Variables")
data.A = data.frame(data.A)
data.A$Factors
library(tidyverse)
library(ggplot2)
library(cowplot)
library(gridExtra)
library(caret)
library(matrixStats)
library(grid)
##### DATA LOADING --------------------
load(here::here("data" ,"importance_permutation_marine.RData"))
ImpAMP_All <- data.frame(importance_permutation_marine)
VariablesAMP_All = ImpAMP_All$permutation.rowname
ImpAMP_All <- ImpAMP_All[,2:11]
row.names(ImpAMP_All) <- VariablesAMP_All
ImpAMP_All <- (ImpAMP_All/max(ImpAMP_All)) %>%
mutate(score.mean = rowMeans(.), score.sd = rowSds(as.matrix(.)))
load(here::here("data" ,"importance_permutation_marine.RData"))
